{"ast":null,"code":"var _jsxFileName = \"/home/parshwa/Downloads/project/Money-tracker/frontend/src/components/Main/List/List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\nimport useStyles from './styles';\nimport { useAuth } from '../../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const classes = useStyles();\n  const {\n    currentUser\n  } = useAuth();\n  const [transactions, Settransactions] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: currentUser.email\n        })\n      });\n      const data = await response.json();\n      Settransactions(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  fetchData();\n  const deletetransaction = id => {\n    fetch('http://localhost:5000/api/deletetransaction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(MUIList, {\n    dense: false,\n    className: classes.list,\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense,\n            children: /*#__PURE__*/_jsxDEV(MoneyOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: transaction.category,\n          secondary: `$${transaction.amount} - ${transaction.date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => deletetransaction(transaction._id),\n            children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, transaction._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(List, \"SZKzzt1ZBjcMLvcbQNYS3BzvX5U=\", false, function () {\n  return [useStyles, useAuth];\n});\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","List","MUIList","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","IconButton","Slide","Delete","MoneyOff","useStyles","useAuth","jsxDEV","_jsxDEV","_s","classes","currentUser","transactions","Settransactions","fetchData","response","fetch","method","headers","body","JSON","stringify","email","data","json","error","console","log","deletetransaction","id","dense","className","list","children","map","transaction","direction","in","mountOnEnter","unmountOnExit","type","avatarIncome","avatarExpense","fileName","_jsxFileName","lineNumber","columnNumber","primary","category","secondary","amount","date","edge","onClick","_id","_c","$RefreshReg$"],"sources":["/home/parshwa/Downloads/project/Money-tracker/frontend/src/components/Main/List/List.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\nimport useStyles from './styles';\nimport { useAuth } from '../../../context/AuthContext';\n\nconst List = () => {\n  const classes = useStyles();\n  const { currentUser } = useAuth();\n  const [transactions, Settransactions] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: currentUser.email\n        })\n      });\n      const data = await response.json();\n      Settransactions(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  fetchData()\n\n  const deletetransaction = (id) => {\n    fetch('http://localhost:5000/api/deletetransaction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    })\n  }\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction._id}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\n                <MoneyOff />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - ${transaction.date}`} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deletetransaction(transaction._id)}>\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))\n      }\n    </MUIList >\n  );\n};\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}